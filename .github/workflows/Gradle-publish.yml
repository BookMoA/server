name: server build test (Github Actions)

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      DB_URL: ${{ secrets.DB_URL }}
      MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}

    steps:
      - name: ✔️ 리포지토리 가져오기
        uses: actions/checkout@v4

      - name: ✔ Setup MySQL
        uses: samin/mysql-action@v1
        with:
          character set server: 'utf8'
          mysql database: ${{ env.MYSQL_DB }}
          mysql user: ${{ env.MYSQL_USER }}
          mysql password: ${{ env.MYSQL_PASSWORD }}

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping --host=127.0.0.1 --user=$MYSQL_USERNAME --password=$MYSQL_PASSWORD --silent; do
            sleep 1
          done

      - name: Verify MySQL is running
        run: netstat -tlnp | grep 3306

      - name: ✔️ JDK 17 설치
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: ✔️ Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches/modules-2
            ~/.gradle/caches/jars-3
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', 'gradle.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: ✔️ Gradle 명령 실행 권한 설정
        run: chmod +x gradlew

      - name: ✔️ Gradle build
        run: ./gradlew build -x test

      - name: 테스트 코드 실행
        run: ./gradlew --info test -Dspring.profiles.active=test

      - name: 테스트 결과 PR에 코멘트 작성
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/build/test-results/**/*.xml

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
